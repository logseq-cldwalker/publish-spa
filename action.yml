name: 'Logseq Publish SPA'
description: 'Publishes a Logseq graph as a Single Page Application (SPA)'
inputs:
  graph-directory:
    description: "Graph's root directory"
    required: true
    default: '.'
  output-directory:
    description: "Directory for published graph"
    required: true
    default: 'www'
  version:
    description: "Version of Logseq - tag or SHA"
    required: true
    default: '0.9.1'

runs:
  using: "composite"
  steps:
    # First, build logseq's static/ and publishing assets
    - name: Checkout logseq
      uses: actions/checkout@v3
      with:
        repository: logseq/logseq
        path: _logseq
        ref: ${{ inputs.version }}

    - name: Set up Clojure
      uses: DeLaGuardo/setup-clojure@master
      with:
        cli: 1.11.1.1182
        bb: 1.2.174

    - name: Set up Node on Logseq
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'yarn'
        cache-dependency-path: _logseq/yarn.lock

    - name: Fetch logseq's yarn deps
      run: cd _logseq && yarn install --immutable
      shell: bash

    - name: Build logseq's static directory
      run: cd _logseq && yarn gulp:build
      shell: bash

    - name: cljs publishing cache
      uses: actions/cache@v3
      id: cljs-publishing
      with:
        path: _logseq/static/js/publishing
        key: ${{ runner.os }}cljs-publishing-${{ inputs.version }}
        restore-keys: ${{ runner.os }}-cljs-publishing-${{ inputs.version }}

    - name: Build cljs publishing
      if: steps.cljs-publishing.outputs.cache-hit != 'true'
      run: cd _logseq && clojure -M:cljs release publishing
      shell: bash

     # Second, checkout action and run publish script
    - name: Checkout action
      uses: actions/checkout@v3
      with:
        repository: logseq-cldwalker/publish-spa
        path: _publish-spa

    - name: Set up Node on action
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'yarn'
        cache-dependency-path: _publish-spa/yarn.lock

    - name: Fetch yarn deps
      run: cd _publish-spa && yarn install --immutable
      shell: bash

    - name: Nbb cache
      uses: actions/cache@v3
      id: nbb-deps
      with:
        path: |
          ~/.m2/repository
          ~/.gitlibs
        key: ${{ runner.os }}-nbb-deps-${{ hashFiles('_publish-spa/nbb.edn') }}
        restore-keys: ${{ runner.os }}-nbb-deps-

    - name: Fetch nbb deps
      if: steps.nbb-deps.outputs.cache-hit != 'true'
      run: cd _publish-spa && yarn nbb-logseq -e ':fetching-deps'
      shell: bash

    - name: Export graph to directory
      run: cd _publish-spa && node publish_spa.mjs ../_logseq/static ${{ inputs.graph-directory }} ${{ inputs.output-directory }}
      shell: bash
